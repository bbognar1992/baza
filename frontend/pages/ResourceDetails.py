import streamlit as st
from default_data import ensure_base_session_state
import pandas as pd
from datetime import datetime, timedelta

st.set_page_config(page_title="Resource Details ‚Äì √âp√≠tAI", layout="wide")

ensure_base_session_state(st)

st.title("üë§ Er≈ëforr√°s R√©szletek")

# Check if a resource is selected
if "selected_resource_index" not in st.session_state or st.session_state.selected_resource_index is None:
    st.warning("Nincs kiv√°lasztott er≈ëforr√°s. K√©rj√ºk, v√°lassz ki egy er≈ëforr√°st a f≈ë Er≈ëforr√°sok oldalr√≥l.")
    st.info("üí° Tipp: Menj vissza az Er≈ëforr√°sok oldalra √©s kattints egy er≈ëforr√°s nev√©re a r√©szletek megtekint√©s√©hez.")
    
    if st.button("üîô Vissza az Er≈ëforr√°sok oldalra"):
        st.switch_page("pages/Resources.py")
else:
    # Get the selected resource
    resource_index = st.session_state.selected_resource_index
    if resource_index < len(st.session_state.resources):
        resource = st.session_state.resources[resource_index]
        
        # Header with resource info
        col1, col2, col3 = st.columns([2, 1, 1])
        
        with col1:
            st.subheader(f"üìã {resource.get('N√©v', 'N√©vtelen')}")
            st.caption(f"T√≠pus: {resource.get('T√≠pus', 'Ismeretlen')}")
        
        with col2:
            if st.button("‚úèÔ∏è Szerkeszt√©s", key="edit_resource"):
                st.session_state.edit_mode = True
                st.rerun()
        
        with col3:
            if st.button("üîô Vissza", key="back_to_resources"):
                st.session_state.selected_resource_index = None
                st.switch_page("pages/Resources.py")
        
        # Check if in edit mode
        if st.session_state.get("edit_mode", False):
            st.markdown("---")
            st.subheader("‚úèÔ∏è Er≈ëforr√°s szerkeszt√©se")
            
            with st.form("edit_resource_form"):
                col1, col2 = st.columns(2)
                
                with col1:
                    new_type = st.selectbox(
                        "T√≠pus",
                        ["Alkalmazott", "Alv√°llalkoz√≥", "Besz√°ll√≠t√≥"],
                        index=["Alkalmazott", "Alv√°llalkoz√≥", "Besz√°ll√≠t√≥"].index(resource.get("T√≠pus", "Alkalmazott")),
                        key="edit_type"
                    )
                    
                    name_label = "N√©v" if new_type == "Alkalmazott" else "C√©g neve"
                    new_name = st.text_input(
                        name_label, 
                        value=resource.get("N√©v", ""),
                        key="edit_name"
                    )
                
                with col2:
                    if new_type == "Alkalmazott":
                        detail_label = "Poz√≠ci√≥"
                    elif new_type == "Alv√°llalkoz√≥":
                        detail_label = "El√©rhet≈ës√©g"
                    else:  # Besz√°ll√≠t√≥
                        detail_label = "Term√©k / szakter√ºlet"
                    
                    new_detail = st.text_input(
                        detail_label,
                        value=resource.get("Poz√≠ci√≥", ""),
                        key="edit_detail"
                    )
                
                # Additional fields for enhanced details
                st.subheader("üìû Kapcsolattart√°si adatok")
                col1, col2 = st.columns(2)
                
                with col1:
                    phone = st.text_input(
                        "Telefonsz√°m",
                        value=resource.get("Telefonsz√°m", ""),
                        key="edit_phone"
                    )
                    email = st.text_input(
                        "E-mail",
                        value=resource.get("E-mail", ""),
                        key="edit_email"
                    )
                
                with col2:
                    address = st.text_area(
                        "C√≠m",
                        value=resource.get("C√≠m", ""),
                        key="edit_address"
                    )
                
                # Skills and availability
                st.subheader("üõ†Ô∏è K√©szs√©gek √©s el√©rhet≈ës√©g")
                col1, col2 = st.columns(2)
                
                with col1:
                    skills = st.text_area(
                        "K√©szs√©gek / Szakter√ºletek",
                        value=resource.get("K√©szs√©gek", ""),
                        key="edit_skills"
                    )
                    hourly_rate = st.number_input(
                        "√ìrab√©r (Ft)",
                        value=float(resource.get("√ìrab√©r", 0)),
                        min_value=0.0,
                        key="edit_hourly_rate"
                    )
                
                with col2:
                    availability = st.selectbox(
                        "El√©rhet≈ës√©g",
                        ["El√©rhet≈ë", "Foglalt", "Szabads√°gon", "Betegszabads√°g"],
                        index=["El√©rhet≈ë", "Foglalt", "Szabads√°gon", "Betegszabads√°g"].index(resource.get("El√©rhet≈ës√©g", "El√©rhet≈ë")),
                        key="edit_availability"
                    )
                    
                    experience_years = st.number_input(
                        "Tapasztalat (√©v)",
                        value=int(resource.get("Tapasztalat", 0)),
                        min_value=0,
                        max_value=50,
                        key="edit_experience"
                    )
                
                col1, col2 = st.columns(2)
                with col1:
                    if st.form_submit_button("üíæ Ment√©s", type="primary"):
                        if new_name:
                            # Update the resource
                            st.session_state.resources[resource_index] = {
                                "T√≠pus": new_type,
                                "N√©v": new_name,
                                "Poz√≠ci√≥": new_detail,
                                "Telefonsz√°m": phone,
                                "E-mail": email,
                                "C√≠m": address,
                                "K√©szs√©gek": skills,
                                "√ìrab√©r": hourly_rate,
                                "El√©rhet≈ës√©g": availability,
                                "Tapasztalat": experience_years
                            }
                            st.success("Er≈ëforr√°s sikeresen friss√≠tve!")
                            st.session_state.edit_mode = False
                            st.rerun()
                        else:
                            st.error("A n√©v megad√°sa k√∂telez≈ë!")
                
                with col2:
                    if st.form_submit_button("‚ùå M√©gse"):
                        st.session_state.edit_mode = False
                        st.rerun()
        else:
            # Display mode
            st.markdown("---")
            
            # Main info cards
            col1, col2, col3, col4 = st.columns(4)
            
            with col1:
                st.metric(
                    label="T√≠pus",
                    value=resource.get("T√≠pus", "Ismeretlen")
                )
            
            with col2:
                st.metric(
                    label="El√©rhet≈ës√©g",
                    value=resource.get("El√©rhet≈ës√©g", "El√©rhet≈ë")
                )
            
            with col3:
                experience = resource.get("Tapasztalat", 0)
                st.metric(
                    label="Tapasztalat",
                    value=f"{experience} √©v"
                )
            
            with col4:
                hourly_rate = resource.get("√ìrab√©r", 0)
                st.metric(
                    label="√ìrab√©r",
                    value=f"{hourly_rate:,.0f} Ft" if hourly_rate > 0 else "Nincs megadva"
                )
            
            # Detailed information tabs
            tab1, tab2, tab3, tab4 = st.tabs([
                "üìã Alapadatok",
                "üìû Kapcsolat",
                "üõ†Ô∏è K√©szs√©gek",
                "üìä Projektek"
            ])
            
            with tab1:
                col1, col2 = st.columns(2)
                
                with col1:
                    st.subheader("Szem√©lyes adatok")
                    st.write(f"**N√©v:** {resource.get('N√©v', 'Nincs megadva')}")
                    st.write(f"**Poz√≠ci√≥/Szakter√ºlet:** {resource.get('Poz√≠ci√≥', 'Nincs megadva')}")
                    st.write(f"**T√≠pus:** {resource.get('T√≠pus', 'Nincs megadva')}")
                    st.write(f"**Tapasztalat:** {resource.get('Tapasztalat', 0)} √©v")
                
                with col2:
                    st.subheader("Munkav√©gz√©s")
                    st.write(f"**El√©rhet≈ës√©g:** {resource.get('El√©rhet≈ës√©g', 'El√©rhet≈ë')}")
                    st.write(f"**√ìrab√©r:** {resource.get('√ìrab√©r', 0):,.0f} Ft" if resource.get('√ìrab√©r', 0) > 0 else "**√ìrab√©r:** Nincs megadva")
            
            with tab2:
                col1, col2 = st.columns(2)
                
                with col1:
                    st.subheader("Kapcsolattart√°s")
                    phone = resource.get("Telefonsz√°m", "")
                    email = resource.get("E-mail", "")
                    
                    if phone:
                        st.write(f"**Telefonsz√°m:** {phone}")
                    else:
                        st.write("**Telefonsz√°m:** Nincs megadva")
                    
                    if email:
                        st.write(f"**E-mail:** {email}")
                    else:
                        st.write("**E-mail:** Nincs megadva")
                
                with col2:
                    st.subheader("C√≠m")
                    address = resource.get("C√≠m", "")
                    if address:
                        st.write(f"**C√≠m:** {address}")
                    else:
                        st.write("**C√≠m:** Nincs megadva")
            
            with tab3:
                st.subheader("K√©szs√©gek √©s szakter√ºletek")
                skills = resource.get("K√©szs√©gek", "")
                if skills:
                    st.write(skills)
                else:
                    st.info("Nincsenek megadva k√©szs√©gek.")
            
            with tab4:
                st.subheader("Projektel≈ëzm√©nyek")
                
                # Find projects where this resource is involved
                involved_projects = []
                for project in st.session_state.projects:
                    if resource.get("N√©v") in project.get("members", []):
                        involved_projects.append(project)
                
                if involved_projects:
                    st.write(f"Ez az er≈ëforr√°s **{len(involved_projects)}** projektben vesz r√©szt:")
                    
                    for project in involved_projects:
                        with st.expander(f"üìÅ {project.get('name', 'N√©vtelen projekt')}"):
                            col1, col2 = st.columns(2)
                            
                            with col1:
                                st.write(f"**St√°tusz:** {project.get('status', 'Ismeretlen')}")
                                st.write(f"**Kezd√©s:** {project.get('start', 'Nincs megadva')}")
                                st.write(f"**Befejez√©s:** {project.get('end', 'Nincs megadva')}")
                            
                            with col2:
                                st.write(f"**Helysz√≠n:** {', '.join(project.get('locations', []))}")
                                st.write(f"**El≈ërehalad√°s:** {project.get('progress', 0)}%")
                                st.write(f"**T√≠pus:** {project.get('type', 'Nincs megadva')}")
                else:
                    st.info("Ez az er≈ëforr√°s m√©g nem vett r√©szt egyetlen projektben sem.")
            
            # Action buttons
            st.markdown("---")
            col1, col2, col3 = st.columns(3)
            
            with col1:
                if st.button("‚úèÔ∏è Szerkeszt√©s", key="edit_button"):
                    st.session_state.edit_mode = True
                    st.rerun()
            
            with col2:
                if st.button("üóëÔ∏è T√∂rl√©s", key="delete_button"):
                    st.session_state.show_delete_confirmation = True
                    st.rerun()
            
            with col3:
                if st.button("üìã √öj projekthez hozz√°ad√°s", key="add_to_project"):
                    st.session_state.show_add_to_project = True
                    st.rerun()
            
            # Delete confirmation
            if st.session_state.get("show_delete_confirmation", False):
                st.warning("‚ö†Ô∏è Biztosan t√∂r√∂lni szeretn√©d ezt az er≈ëforr√°st?")
                col1, col2 = st.columns(2)
                
                with col1:
                    if st.button("‚úÖ Igen, t√∂rl√©s", key="confirm_delete"):
                        del st.session_state.resources[resource_index]
                        st.session_state.selected_resource_index = None
                        st.session_state.show_delete_confirmation = False
                        st.success("Er≈ëforr√°s sikeresen t√∂r√∂lve!")
                        st.rerun()
                
                with col2:
                    if st.button("‚ùå M√©gse", key="cancel_delete"):
                        st.session_state.show_delete_confirmation = False
                        st.rerun()
            
            # Add to project dialog
            if st.session_state.get("show_add_to_project", False):
                st.subheader("üìã Er≈ëforr√°s hozz√°ad√°sa projekthez")
                
                # Get available projects
                available_projects = [p for p in st.session_state.projects if resource.get("N√©v") not in p.get("members", [])]
                
                if available_projects:
                    project_names = [p.get("name", "N√©vtelen projekt") for p in available_projects]
                    selected_project_name = st.selectbox("V√°lassz projektet:", project_names)
                    
                    col1, col2 = st.columns(2)
                    
                    with col1:
                        if st.button("‚úÖ Hozz√°ad√°s", key="confirm_add_to_project"):
                            # Find the selected project and add the resource
                            for project in st.session_state.projects:
                                if project.get("name") == selected_project_name:
                                    if "members" not in project:
                                        project["members"] = []
                                    project["members"].append(resource.get("N√©v"))
                                    break
                            
                            st.success(f"Er≈ëforr√°s hozz√°adva a '{selected_project_name}' projekthez!")
                            st.session_state.show_add_to_project = False
                            st.rerun()
                    
                    with col2:
                        if st.button("‚ùå M√©gse", key="cancel_add_to_project"):
                            st.session_state.show_add_to_project = False
                            st.rerun()
                else:
                    st.info("Nincs el√©rhet≈ë projekt, ahova hozz√°adhatn√°d ezt az er≈ëforr√°st.")
                    if st.button("‚ùå Bez√°r√°s", key="close_add_to_project"):
                        st.session_state.show_add_to_project = False
                        st.rerun()
    else:
        st.error("A kiv√°lasztott er≈ëforr√°s nem tal√°lhat√≥.")
        st.session_state.selected_resource_index = None
        st.rerun()
