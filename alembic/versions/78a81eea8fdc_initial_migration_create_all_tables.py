"""Initial migration - create all tables

Revision ID: 78a81eea8fdc
Revises: 
Create Date: 2025-10-18 13:50:44.448393

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78a81eea8fdc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profession_types',
    sa.Column('profession_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('level', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("level IN ('Szakmunkás', 'Vezető', 'Szakértő')", name='ck_profession_level'),
    sa.PrimaryKeyConstraint('profession_type_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project_types',
    sa.Column('project_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('project_type_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Active', 'Inactive', 'Terminated')", name='ck_user_status'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('weather_data',
    sa.Column('weather_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('precipitation_probability', sa.Integer(), nullable=True),
    sa.Column('precipitation_hours', sa.Integer(), nullable=True),
    sa.Column('temperature_min', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('temperature_max', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('wind_speed', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('can_work_outdoor', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('weather_id'),
    sa.UniqueConstraint('location', 'date', name='uq_weather_location_date')
    )
    op.create_table('phases',
    sa.Column('phase_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_type_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order_sequence', sa.Integer(), nullable=False),
    sa.Column('total_duration_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_type_id'], ['project_types.project_type_id'], ),
    sa.PrimaryKeyConstraint('phase_id')
    )
    op.create_table('projects',
    sa.Column('project_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_name', sa.String(length=300), nullable=False),
    sa.Column('client_name', sa.String(length=200), nullable=True),
    sa.Column('project_type_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('budget', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('project_manager_id', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('size_sqm', sa.Integer(), nullable=True),
    sa.Column('project_code', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("priority IN ('Alacsony', 'Közepes', 'Magas')", name='ck_project_priority'),
    sa.CheckConstraint("status IN ('Tervezés alatt', 'Folyamatban', 'Késésben', 'Lezárt')", name='ck_project_status'),
    sa.CheckConstraint('progress_percent >= 0 AND progress_percent <= 100', name='ck_project_progress'),
    sa.ForeignKeyConstraint(['project_manager_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['project_type_id'], ['project_types.project_type_id'], ),
    sa.PrimaryKeyConstraint('project_id'),
    sa.UniqueConstraint('project_code')
    )
    op.create_table('resources',
    sa.Column('resource_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('profession_type_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('skills', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('availability', sa.String(length=50), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("availability IN ('Elérhető', 'Foglalt', 'Szabadságon', 'Betegszabadság')", name='ck_resource_availability'),
    sa.CheckConstraint("type IN ('Alkalmazott', 'Alvállalkozó', 'Beszállító')", name='ck_resource_type'),
    sa.ForeignKeyConstraint(['profession_type_id'], ['profession_types.profession_type_id'], ),
    sa.PrimaryKeyConstraint('resource_id')
    )
    op.create_table('materials',
    sa.Column('material_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('supplier', sa.String(length=200), nullable=True),
    sa.Column('vendor_contact', sa.String(length=255), nullable=True),
    sa.Column('lead_time_days', sa.Integer(), nullable=True),
    sa.Column('minimum_order', sa.Integer(), nullable=True),
    sa.Column('current_stock', sa.Integer(), nullable=True),
    sa.Column('reorder_level', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Available', 'Out of Stock', 'Discontinued')", name='ck_material_status'),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.resource_id'], ),
    sa.PrimaryKeyConstraint('material_id')
    )
    op.create_table('project_locations',
    sa.Column('project_location_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('coordinates_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('coordinates_lng', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_location_id')
    )
    op.create_table('project_members',
    sa.Column('project_member_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('role_in_project', sa.String(length=100), nullable=True),
    sa.Column('assigned_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.resource_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_member_id'),
    sa.UniqueConstraint('project_id', 'resource_id', name='uq_project_member')
    )
    op.create_table('project_phases',
    sa.Column('project_phase_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Not Started', 'In Progress', 'Completed', 'On Hold')", name='ck_project_phase_status'),
    sa.CheckConstraint('progress_percent >= 0 AND progress_percent <= 100', name='ck_project_phase_progress'),
    sa.ForeignKeyConstraint(['phase_id'], ['phases.phase_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_phase_id')
    )
    op.create_table('tasks',
    sa.Column('task_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phase_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('profession_type_id', sa.Integer(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('required_people', sa.Integer(), nullable=True),
    sa.Column('order_sequence', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['phase_id'], ['phases.phase_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profession_type_id'], ['profession_types.profession_type_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('project_materials',
    sa.Column('project_material_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('assigned_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Planned', 'Ordered', 'Delivered', 'Used')", name='ck_project_material_status'),
    sa.ForeignKeyConstraint(['material_id'], ['materials.material_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_material_id')
    )
    op.create_table('project_tasks',
    sa.Column('project_task_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_phase_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Not Started', 'In Progress', 'Completed', 'On Hold')", name='ck_project_task_status'),
    sa.CheckConstraint('progress_percent >= 0 AND progress_percent <= 100', name='ck_project_task_progress'),
    sa.ForeignKeyConstraint(['project_phase_id'], ['project_phases.project_phase_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.PrimaryKeyConstraint('project_task_id')
    )
    op.create_table('task_assignments',
    sa.Column('assignment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_task_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('assigned_date', sa.Date(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('hours_worked', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("status IN ('Assigned', 'In Progress', 'Completed', 'Cancelled')", name='ck_task_assignment_status'),
    sa.ForeignKeyConstraint(['project_task_id'], ['project_tasks.project_task_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.resource_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('assignment_id'),
    sa.UniqueConstraint('project_task_id', 'resource_id', name='uq_task_assignment')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_assignments')
    op.drop_table('project_tasks')
    op.drop_table('project_materials')
    op.drop_table('tasks')
    op.drop_table('project_phases')
    op.drop_table('project_members')
    op.drop_table('project_locations')
    op.drop_table('materials')
    op.drop_table('resources')
    op.drop_table('projects')
    op.drop_table('phases')
    op.drop_table('weather_data')
    op.drop_table('users')
    op.drop_table('project_types')
    op.drop_table('profession_types')
    # ### end Alembic commands ###
